CXX_STD = CXX11

PKG_CPPFLAGS = @GPURCUDA_CPPFLAGS@
PKG_CXXFLAGS = @GPURCUDA_CXXFLAGS@

PKG_LIBS = @GPURCUDA_LIBS@
R_LIBS = @R_LIBS@

cpp_sources = $(wildcard *.cpp)
cpp_sharedlibs = $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cpp_sharedlibs)

R_INC = -I/../inst/include @R_INCL@ @RCPP_INCL@ @THRUST_INCL@ @CU_INCL@
CXX_ARGS = @R_CPIC@

CU_ARGS = -Xcompiler -fPIC -Xcudafe --diag_suppress=code_is_unreachable
CU_INCL = -I../inst/include @R_INCL@ @RCPP_INCL@ @THRUST_INCL@
CU_ARCH = -gencode arch=compute_70,code=sm_70
CU_ARCH+= -gencode arch=compute_75,code=sm_75
CU_ARCH+= -gencode arch=compute_80,code=sm_80

CXX=@CXX@
NVCC=@NVCC@

all: gpuRcuda.so

gpuRcuda.so: $(OBJECTS)

BACKEND = @BACKEND@
ifeq "$(BACKEND)" "CUDA"
%.o: %.cpp $(cpp_sources)
		$(NVCC) $(CU_ARCH) -std=c++14 -DGPU -x cu -c $(CU_ARGS) $(CU_INCL) $< -o $@

else
gpuRcuda.so: $(OBJECTS)
endif

clean:
	@rm -rf *.o *.so *.dll
